{"version":3,"sources":["components/Select.js","components/App.js","reportWebVitals.js","index.js"],"names":["Select","generateCurrenciesList","obj","props","avalibleCurrencies","Object","keys","map","key","index","value","this","onChange","id","name","Component","APIKey","process","App","state","PLN","EUR","firstInputCurrency","secondInputCurrency","firstInputValue","secondInputValue","currencyRate","error","getApiCurrenciesList","fetch","method","headers","then","response","json","data","currencies","setState","setTimeout","catch","err","console","initialApiRequest","rates","rate","getApiCurrencyRate","firstCurrency","secondCurrency","APIurl","createApiRequest","newCurrencyRate","newValue","Math","round","handleInputChange","isFirst","actualRate","otherValue","handleOptionChange","errorDisplay","className","event","target","Input","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA4BeA,E,4MA1BbC,uBAAyB,WACvB,IAAIC,EAAM,EAAKC,MAAMC,mBAErB,OAAOC,OAAOC,KAAKJ,GAAKK,KAAI,SAACC,EAAKC,GAChC,OACE,wBAAQC,MAAOF,EAAf,SACGN,EAAIM,IADkBC,O,4CAO/B,WACE,OACE,wBACEC,MAAOC,KAAKR,MAAMO,MAClBE,SAAUD,KAAKR,MAAMS,SACrBC,GAAIF,KAAKR,MAAMU,GACfC,KAAMH,KAAKR,MAAMW,KAJnB,SAMGH,KAAKV,+B,GArBOc,aCGfC,EAASC,qDAETC,E,4MACJC,MAAQ,CACNf,mBAAoB,CAAEgB,IAAK,QAASC,IAAK,QAEzCC,mBAAoB,MACpBC,oBAAqB,MACrBC,gBAAiB,GACjBC,iBAAkB,GAElBC,aAAc,GACdC,MAAO,I,EAQTC,qBAAuB,WACrBC,MAAM,2DAA4D,CAChEC,OAAQ,MACRC,QAAS,CACP,iBAAkBf,EAClB,kBAAmB,wCAGpBgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAC0B,qBAApBA,EAAKC,YACd,EAAKC,SAAS,CACZV,MACE,kHAEJW,YAAW,kBAAM,EAAKV,yBAAwB,MAE9C,EAAKS,SAAS,CACZjC,mBAAoB+B,EAAKC,WACzBT,MAAO,QAIZY,OAAM,SAACC,GACNC,QAAQd,MAAMa,O,EAIpBE,kBAAoB,WAClBb,MACE,mGACA,CACEC,OAAQ,MACRC,QAAS,CACP,iBAAkBf,EAClB,kBAAmB,wCAItBgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACqB,qBAAfA,EAAKQ,MACd,EAAKN,SAAS,CACZV,MACE,oGAGJ,EAAKU,SAAS,CACZX,aAAcS,EAAKQ,MAAMvB,IAAIwB,KAC7BjB,MAAO,QAIZY,OAAM,SAACC,GACNC,QAAQd,MAAMa,O,EAIpBK,mBAAqB,SAACC,EAAeC,GACnC,IAAMC,EAAS,EAAKC,iBAAiBH,EAAeC,GAEpDlB,MAAMmB,EAAQ,CACZlB,OAAQ,MACRC,QAAS,CACP,iBAAkBf,EAClB,kBAAmB,wCAGpBgB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,GAA0B,qBAAfA,EAAKQ,MACd,EAAKN,SAAS,CACZV,MACE,qGAEC,CACL,IAAMuB,EACJf,EAAKQ,MAAM,EAAKxB,MAAMI,qBAAqBqB,KACvCO,EACJC,KAAKC,MAAM,EAAKlC,MAAMK,gBAAkB0B,EAAkB,KAC1D,IACF,EAAKb,SAAS,CACZZ,iBAAkB0B,EAClBzB,aAAcwB,EACdvB,MAAO,SAIZY,OAAM,SAACC,GACNC,QAAQd,MAAMa,O,EAIpBc,kBAAoB,SAAC5C,EAAOkC,EAAMW,GAChC,IAAMC,EAAaD,EAAUX,EAAO,EAAIA,EAClCa,EAAaL,KAAKC,MAAM3C,EAAQ8C,EAAa,KAAO,IAEtDD,EACF,EAAKlB,SAAS,CACZb,gBAAiBd,EACjBe,iBAAkBgC,IAGpB,EAAKpB,SAAS,CACZb,gBAAiBiC,EACjBhC,iBAAkBf,K,EAKxBuC,iBAAmB,SAACH,EAAeC,GAMjC,MAJE,gFAKcD,EAJI,OAI0BC,EAH1B,a,EAOtBW,mBAAqB,SAAC5C,EAAMJ,EAAO6C,GACjC,IAAIT,EAAgBS,EAAU7C,EAAQ,EAAKS,MAAMG,mBAC7CyB,EAAiBQ,EAAU,EAAKpC,MAAMI,oBAAsBb,EAEhE,EAAK2B,SAAL,eACGvB,EAAOJ,IAGV,EAAKmC,mBAAmBC,EAAeC,I,EAGzCY,aAAe,WAGb,MAAyB,KAArB,EAAKxC,MAAMQ,MACN,KAEA,sBAAMiC,UAAU,YAAhB,SAA6B,EAAKzC,MAAMQ,S,uDA/InD,WAAqB,IAAD,OAClBhB,KAAKiB,uBACLU,YAAW,kBAAM,EAAKI,sBAAqB,O,oBAiJ7C,WAAU,IAAD,OACP,OACE,gCACE,sBAAKkB,UAAU,qBAAf,UACE,uBAAMA,UAAU,wBAAhB,oCAC0BjD,KAAKQ,MAAMO,gBAErC,kCACE,cAAC,EAAD,CACEhB,MAAOC,KAAKQ,MAAMK,gBAClBZ,SAAU,SAACiD,GAAD,OACR,EAAKP,kBACHO,EAAMC,OAAOpD,MACb,EAAKS,MAAMO,cACX,MAIN,cAAC,EAAD,CACEhB,MAAOC,KAAKQ,MAAMG,mBAClBR,KAAK,qBACLF,SAAU,SAACiD,GAAD,OACR,EAAKH,mBACHG,EAAMC,OAAOhD,KACb+C,EAAMC,OAAOpD,OACb,IAGJN,mBAAoBO,KAAKQ,MAAMf,2BAIrC,qBAAKwD,UAAU,qBAAf,SACE,kCACE,cAAC,EAAD,CACElD,MAAOC,KAAKQ,MAAMM,iBAClBb,SAAU,SAACiD,GAAD,OACR,EAAKP,kBACHO,EAAMC,OAAOpD,MACb,EAAKS,MAAMO,cACX,MAIN,cAAC,EAAD,CACEhB,MAAOC,KAAKQ,MAAMI,oBAClBT,KAAK,sBACLF,SAAU,SAACiD,GAAD,OACR,EAAKH,mBACHG,EAAMC,OAAOhD,KACb+C,EAAMC,OAAOpD,OACb,IAGJN,mBAAoBO,KAAKQ,MAAMf,0BAIpCO,KAAKgD,sB,GA1NI5C,aAgOZgD,EAAQ,SAAC5D,GACb,OAAO,uBAAOO,MAAOP,EAAMO,MAAOE,SAAUT,EAAMS,YAGrCM,IC9NA8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.39cdce8b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass Select extends Component {\r\n  generateCurrenciesList = () => {\r\n    let obj = this.props.avalibleCurrencies;\r\n\r\n    return Object.keys(obj).map((key, index) => {\r\n      return (\r\n        <option value={key} key={index}>\r\n          {obj[key]}\r\n        </option>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <select\r\n        value={this.props.value}\r\n        onChange={this.props.onChange}\r\n        id={this.props.id}\r\n        name={this.props.name}\r\n      >\r\n        {this.generateCurrenciesList()}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Select;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Select from \"./Select.js\";\n\nconst APIKey = process.env.REACT_APP_API_KEY;\n\nclass App extends Component {\n  state = {\n    avalibleCurrencies: { PLN: \"Zloty\", EUR: \"Euro\" },\n\n    firstInputCurrency: \"EUR\",\n    secondInputCurrency: \"PLN\",\n    firstInputValue: \"\",\n    secondInputValue: \"\",\n\n    currencyRate: \"\",\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.getApiCurrenciesList();\n    setTimeout(() => this.initialApiRequest(), 1000);\n  }\n\n  getApiCurrenciesList = () => {\n    fetch(\"https://currency-converter5.p.rapidapi.com/currency/list\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": APIKey,\n        \"x-rapidapi-host\": \"currency-converter5.p.rapidapi.com\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (typeof data.currencies === \"undefined\") {\n          this.setState({\n            error:\n              \"Oops, the program encountered a problem retrieving the currency list. The program will try again in a moment.\",\n          });\n          setTimeout(() => this.getApiCurrenciesList(), 1000);\n        } else {\n          this.setState({\n            avalibleCurrencies: data.currencies,\n            error: \"\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  initialApiRequest = () => {\n    fetch(\n      \"https://currency-converter5.p.rapidapi.com/currency/convert?format=json&from=EUR&to=PLN&amount=1\",\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\": APIKey,\n          \"x-rapidapi-host\": \"currency-converter5.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        if (typeof data.rates === \"undefined\") {\n          this.setState({\n            error:\n              \"Oops, the program has encountered a problem getting the initial content. Try again in a moment.\",\n          });\n        } else {\n          this.setState({\n            currencyRate: data.rates.PLN.rate,\n            error: \"\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  getApiCurrencyRate = (firstCurrency, secondCurrency) => {\n    const APIurl = this.createApiRequest(firstCurrency, secondCurrency);\n\n    fetch(APIurl, {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-key\": APIKey,\n        \"x-rapidapi-host\": \"currency-converter5.p.rapidapi.com\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (typeof data.rates === \"undefined\") {\n          this.setState({\n            error:\n              \"Oops, the program encountered a problem retrieving the exchange rate. Try again in a moment.\",\n          });\n        } else {\n          const newCurrencyRate =\n            data.rates[this.state.secondInputCurrency].rate;\n          const newValue =\n            Math.round(this.state.firstInputValue * newCurrencyRate * 100) /\n            100;\n          this.setState({\n            secondInputValue: newValue,\n            currencyRate: newCurrencyRate,\n            error: \"\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  handleInputChange = (value, rate, isFirst) => {\n    const actualRate = isFirst ? rate : 1 / rate;\n    const otherValue = Math.round(value * actualRate * 100) / 100;\n\n    if (isFirst) {\n      this.setState({\n        firstInputValue: value,\n        secondInputValue: otherValue,\n      });\n    } else {\n      this.setState({\n        firstInputValue: otherValue,\n        secondInputValue: value,\n      });\n    }\n  };\n\n  createApiRequest = (firstCurrency, secondCurrency) => {\n    const APIurlpart1 =\n      \"https://currency-converter5.p.rapidapi.com/currency/convert?format=json&from=\";\n    const APIurlpart2 = \"&to=\";\n    const APIurlpart3 = \"&amount=1\";\n\n    return (\n      APIurlpart1 + firstCurrency + APIurlpart2 + secondCurrency + APIurlpart3\n    );\n  };\n\n  handleOptionChange = (name, value, isFirst) => {\n    let firstCurrency = isFirst ? value : this.state.firstInputCurrency;\n    let secondCurrency = isFirst ? this.state.secondInputCurrency : value;\n\n    this.setState({\n      [name]: value,\n    });\n\n    this.getApiCurrencyRate(firstCurrency, secondCurrency);\n  };\n\n  errorDisplay = () => {\n    // console.log(this.state.error);\n\n    if (this.state.error === \"\") {\n      return null;\n    } else {\n      return <span className=\"error_msg\">{this.state.error}</span>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"input_label_wraper\">\n          <span className=\"current_exchange_rate\">\n            Current exchange rate: {this.state.currencyRate}\n          </span>\n          <label>\n            <Input\n              value={this.state.firstInputValue}\n              onChange={(event) =>\n                this.handleInputChange(\n                  event.target.value,\n                  this.state.currencyRate,\n                  true\n                )\n              }\n            />\n            <Select\n              value={this.state.firstInputCurrency}\n              name=\"firstInputCurrency\"\n              onChange={(event) =>\n                this.handleOptionChange(\n                  event.target.name,\n                  event.target.value,\n                  true\n                )\n              }\n              avalibleCurrencies={this.state.avalibleCurrencies}\n            />\n          </label>\n        </div>\n        <div className=\"input_label_wraper\">\n          <label>\n            <Input\n              value={this.state.secondInputValue}\n              onChange={(event) =>\n                this.handleInputChange(\n                  event.target.value,\n                  this.state.currencyRate,\n                  false\n                )\n              }\n            />\n            <Select\n              value={this.state.secondInputCurrency}\n              name=\"secondInputCurrency\"\n              onChange={(event) =>\n                this.handleOptionChange(\n                  event.target.name,\n                  event.target.value,\n                  false\n                )\n              }\n              avalibleCurrencies={this.state.avalibleCurrencies}\n            />\n          </label>\n        </div>\n        {this.errorDisplay()}\n      </div>\n    );\n  }\n}\n\nconst Input = (props) => {\n  return <input value={props.value} onChange={props.onChange} />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}